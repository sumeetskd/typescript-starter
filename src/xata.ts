// Generated by Xata Codegen 0.25.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "ingredients",
    columns: [
      { name: "image", type: "string" },
      { name: "price", type: "int" },
      { name: "tname", type: "string" },
    ],
  },
  {
    name: "orderpizza",
    columns: [
      { name: "description", type: "string" },
      { name: "image", type: "string" },
      { name: "ingredients", type: "multiple" },
      { name: "name", type: "string" },
      { name: "price", type: "int" },
      { name: "topping", type: "multiple" },
      { name: "type", type: "string" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Ingredients = InferredTypes["ingredients"];
export type IngredientsRecord = Ingredients & XataRecord;

export type Orderpizza = InferredTypes["orderpizza"];
export type OrderpizzaRecord = Orderpizza & XataRecord;

export type DatabaseSchema = {
  ingredients: IngredientsRecord;
  orderpizza: OrderpizzaRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Sumeet-Kumar-Das-s-workspace-89eiv8.us-east-1.xata.sh/db/pizzeria-db",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
